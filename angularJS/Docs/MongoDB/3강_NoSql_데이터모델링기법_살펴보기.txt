NoSql 데이터 모델링 개념
  * Denormalization(비정규화=데이터 중복 허용)
    - 쿼리 프로세싱을 간단하게 하거나 최적화하기 위해 또는 사용자의 데이터를 특정한 데이터 모델에 맞추기 위해서
      같은 데이터를 여러 도큐먼트나 테이블에 복제하여 중복하는 것을 허용함
    - 비정규화를하면 모든 데이터를 한곳에 모아놓고 쿼리를 수행하기 때문에, 쿼리 수행을 위한 I/O 숫자를 줄여
      전체 성능을 향상시킬 수 있음
    - 데이터 비정규화를 하면 쿼리에 필요한 모든 데이터를 한 곳에 쿼리 친화적인 구조로 모아놓을 수 있기 때문에
      전체적인 쿼리 프로세싱을 단순화하고 수행시간 단축이 가능
    - 해당 데이터는 다른 쿼리 수행을 위해 다른 도큐먼트나 테이블에 중복 저장되게 때문에 사이즈는 필연적으로 증가함 
    
  * Aggregates
    - "유연한 스키마" 속성은 복잡하고 다양한 구조의 내부 요소(nested entities)를 가지고 있는 데이터 클래스를 구성 가능케 함
    - 1:N 관계를 최소화하여 결과적으로 JOIN 연산을 줄임(수행 시간 단축, 저렴한 비용의 대용량 데이터 지원 가능)
    - 복잡하고 다양한 비즈니스 요소를 담을 수 있음(추후 확장성 및 변동성에 대한 유연한 대응 가능)
    - 대부분의 NoSql 솔루션은 기본적으로 "유연한 스키마"를 제공함
    - NoSql의 schema-less 특성을 이용하면, 데이터 모델을 하나의 테이블로 합칠 수 있음
      File{
      	type : "music"
      	공통 필드 (fileID, size, data, name, directory)
      	meta {
      		title : "music title",
      		artist : "singer"
      	}
      }
      
      File{
      	type : "photo"
      	공통 필드 (fileID, size, data, name, directory)
      	meta {
      		format : "JPG"
      	}
      }
      
  * Application Side Joins
    - 대용량 데이터에 대해 빠른 응답 성능과 확장성, 가용성을 최우선 목적으로 하기 때문에, 쿼리 타임 조인을 최대한 피하여 
      데이터 모델을 구성하는 것을 가정함
    - Join 대상 데이터에 대해 비정규화, 어그리게이션을 수행할 때 문제가 발생하는 경우
      a. Join 대상 데이터가 다대다(n:m) 관계를 가짐
      b. Join 대상 데이터의 수시 변동
    - 대상 데이터가 수시로 변경되는 경우, 비정규화와 어그리게이션을 통해서 많은 entity에 해당 데이터의 중복을 허용했기 때문에
      해당 데이터 업데이트 시에 모두 찾아서 업데이트해야 하기 때문에 많은 비용이 발생함
    - 이런 경우 차리리 변경이 잦은 데이터만을 추려내어 쿼리 타임 조인을 수행하는 것이 대안

주요 NoSql 데이터 모델링 기법
  * General Modeling Techniques
    - Atomic Aggregates, Enumerable Keys, Dimensinality Reduction, Index Table, 
      Composite Key Index, Aggregation with Composite Keys, Inverted Search - Direct Aggregation
  
  * Inverted Search Index
    - value의 내용을 key로 하고, key의 내용을 반대로 value로 하는 패턴
    - 검색엔진에서 많이 사용하는 방법
      a. 검색엔진은 사이트의 모든 페이지를 검색 로봇이 검색해서 문서내의 단어들을 색인하여 URL에 맵핑해서 저장해놓음
      b. 검색은 단어를 Key로 검색하기 때문에, value에 검색 키워드가 들어가 있을 경우 효과적인 검색이 불가함
      c. 검색 키워드를 키로해서 URL을 value로 하는 테이블을 다시 만든 다음, 검색 키워드로 검색을 하면 신속하게 검색 키워드를
         가지고 있는 URL을 찾아낼 수 있음
         
NoSql 데이터 모델링 예시
  * NoSql 데이터 모델링 절차
    - 도메인 모델 파악, 쿼리 결과 디자인, 패턴을 이용한 뎅터 모델링, 기능 최적화, 
      NoSql 선정 및 테스트, 선정된 NoSql에 최적화 및 하드웨어 디자인

  * NoSql 선정 및 테스트
    - 모델링한 데이터 구조를 효과적으로 실행할 수 있는 NoSql 검토
    - NoSql 특성 분석 및 부하테스트, 안정성/확장성 테스트 수행
    - 하나의 NoSql만으로 모든 데이터를 처리하려고 하지 말고, RDBMS와 혼용하거나 다른 NoSql과 연동하여 최적의 시스템을 설계
    
    - NoSql 시스템 개발 시, 데이터 모델링이 80% 이상을 차지함
    - 선정한 NoSql과 어플리케이션 특성에 맞는 데이터 모델링에 집중
  